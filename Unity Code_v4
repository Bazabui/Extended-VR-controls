using UnityEngine;
using System.Collections;

public class ControllerXB : MonoBehaviour {

	public float walkRotationSpeed = 1;
	public float walkSpeed = 1;
	public float rotationLimit = 40;

	private GameObject c;

	// Use this for initialization
	void Start () {

		Transform[] allChildren = GetComponentsInChildren<Transform>();

		foreach (Transform child in allChildren) {

			Debug.Log (child.name);

			if (child.name == "Camera")
				c = child.gameObject;
			
		}
        
	}
	
	// Update is called once per frame
	void Update () {
		Walk ();
		Look ();
	}

	private void Look() {
		
		if (Input.GetAxisRaw ("Horizontal2") > 0f || Input.GetAxisRaw ("Horizontal2") < 0f ) {

			float yRotation = (Input.GetAxisRaw ("Horizontal2") * 10) * -1;


			if (c.transform.localEulerAngles.x < rotationLimit || c.transform.localEulerAngles.x > (360 - rotationLimit) && c.transform.localEulerAngles.x < 360) {
                c.transform.Rotate(new Vector3(yRotation, 0f, 0f) );
			}

		} else {
            c.transform.localEulerAngles = new Vector3 (0f, c.transform.localEulerAngles.y, 0f);
		}

		if(Input.GetAxisRaw ("Vertical2") > 0f || Input.GetAxisRaw ("Vertical2") < 0f) {


            float xRotation = Input.GetAxisRaw ("Vertical2") * 10;


			if (c.transform.localEulerAngles.y < rotationLimit || c.transform.localEulerAngles.y > (360 - rotationLimit) && c.transform.localEulerAngles.y < 360) {
                c.transform.Rotate(0f,xRotation,0f,Space.World);
			}

		} else {
			c.transform.localEulerAngles = new Vector3 (c.transform.localEulerAngles.x, 0f, 0f);
		}

	}

	private void Walk() {
        
        if ( Input.GetAxisRaw ("Horizontal") > 0f || Input.GetAxisRaw ("Horizontal") < 0f ) {
            
            transform.Rotate(0f,Input.GetAxisRaw ("Horizontal") * walkRotationSpeed,0f,Space.Self);
		}

        if ( Input.GetAxisRaw ("Vertical") > 0f || Input.GetAxisRaw ("Vertical") < 0f ) {
 
            transform.Translate(0f, 0f, Input.GetAxisRaw("Vertical") * walkSpeed, Space.Self);
        }

	}

}
